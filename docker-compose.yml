version: '3'
services:
    e2e:
        image: cypress-e2e
        build: ./
        container_name: cypress-e2e
        # note: inside e2e container, the network allows accessing
        # "web" host under name "web"
        # so "curl http://web" would return whatever the webserver
        # in the "web" container is cooking
        # see https://docs.docker.com/compose/networking/
        command: bash -c "npm i && npm run clean-reports && npm run cypress:run && npm run after:tests"
        # mount the host directory e2e/cypress and the file e2e/cypress.json as
        # volumes within the container
        # this means that:
        #  1. anything that Cypress writes to these folders (e.g., screenshots,
        #     videos) appears also on the Docker host's filesystem
        #  2. any change that the developer applies to Cypress files on the host
        #     machine immediately takes effect within the e2e container (no docker
        #     rebuild required).
        volumes:
            - './:/e2e/'
            - /e2e/node_modules/

    webserver:
        image: nginx:mainline-alpine
        container_name: webserver
        restart: always
        command: /bin/sh -c "nginx -g 'daemon off;'"
        ports:
            - '80:80'
        volumes:
            # Config file nginx
            - './nginx-conf/conf.d/report.conf:/etc/nginx/conf.d/default.conf'
            # Logging
            - './nginx-conf/log:/var/log/nginx/'
            # Show report
            - './cypress/reports/:/var/www/html/'
        networks:
            - app-network
networks:
    app-network:
        driver: bridge
